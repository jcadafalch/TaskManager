@page "/crear-etiqueta"
@using GestorTareas.Shared;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Forms;
@using MudBlazor;
@using System.ComponentModel.DataAnnotations;

<MudText Align="Align.Center" Typo="Typo.h4" Color="Color.Primary">
    Crear Etiqueta
</MudText>

<EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
    <MudGrid>
        <MudItem>
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Nombre de la etiqueta" @bind-Value="Model.Name" For="@(() => Model.Name)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await CreateNewEtiquetaAsync())">Crear Etiqueta</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

<!-- Es crea el codi aquí per un error amb Visual Studio-->
@code{
    [Inject] protected EtiquetasHttpClient Http { get; set; } = default!;
    [Inject] protected NavigationManager NavigationManager { get; set; }
    [Inject] protected ISnackbar Snackbar { get; set; }
    CreateEtiqueta Model = new CreateEtiqueta();

    public class CreateEtiqueta
    {
        [Required]
        public string Name { get; set; }
    }

    private void OnValidSubmit(EditContext context)
    {
        _ = CreateNewEtiquetaAsync();
    }

    protected async Task CreateNewEtiquetaAsync()
    {
        var etiquetadto = new CreateEtiquetaRequestDTO(Model.Name);
        var response = await Http.GetCreateEtiquetaAsync(etiquetadto);

        if (!response.IsSuccessStatusCode)
        {
            Snackbar.Add("Ha habido un error", Severity.Error);
            return;
        }

        await InvokeAsync(StateHasChanged);
        NavigationManager.NavigateTo("/");
    }
}